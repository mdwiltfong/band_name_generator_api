name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Label of the runner job
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    # Provide the password for postgres
    env:
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: "5432"
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: "5432"
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

      
    steps:
      - name: Create PostgreSQL Database
          env:
            POSTGRES_PASSWORD: postgres
          run: |
            psql -U postgres -c "CREATE DATABASE bandnameapi;"
      - name: Checkout reposity code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Installing dependencies in root directory.
        run: npm ci
      - name: Installing dependencies in front-end directory.
        working-directory: my-app
        run: npm install
      - name: Spin up Dev Environment
        working-directory: bandname_api
        run: npm run setup-db
      - run: npm run dev --if-present
      - run: npm test
